name: Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Build package
      run: npm run build

    - name: Extract version from tag
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Determine release type
      id: release-type
      run: |
        VERSION=${{ steps.version.outputs.version }}
        if [[ $VERSION == *"alpha"* ]]; then
          echo "tag=alpha" >> $GITHUB_OUTPUT
          echo "prerelease=true" >> $GITHUB_OUTPUT
        elif [[ $VERSION == *"beta"* ]]; then
          echo "tag=beta" >> $GITHUB_OUTPUT
          echo "prerelease=true" >> $GITHUB_OUTPUT
        elif [[ $VERSION == *"rc"* ]]; then
          echo "tag=rc" >> $GITHUB_OUTPUT
          echo "prerelease=true" >> $GITHUB_OUTPUT
        else
          echo "tag=latest" >> $GITHUB_OUTPUT
          echo "prerelease=false" >> $GITHUB_OUTPUT
        fi

    - name: Check if version already exists on NPM
      run: |
        VERSION=${{ steps.version.outputs.version }}
        if npm view @blognow/sdk@$VERSION version 2>/dev/null; then
          echo "::error::Version $VERSION already exists on NPM. Please bump the version."
          exit 1
        else
          echo "Version $VERSION is available for publishing"
        fi

    - name: Publish to NPM
      run: npm publish --tag ${{ steps.release-type.outputs.tag }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create GitHub Release
      run: |
        PRERELEASE_FLAG=""
        if [ "${{ steps.release-type.outputs.prerelease }}" = "true" ]; then
          PRERELEASE_FLAG="--prerelease"
        fi
        
        gh release create ${{ github.ref }} \
          --title "Release ${{ steps.version.outputs.version }}" \
          --notes "ðŸš€ **BlogNow SDK v${{ steps.version.outputs.version }}**
        
        ## What's Changed
        
        See [CHANGELOG.md](https://github.com/synkc0/blognow-js-sdk/blob/main/CHANGELOG.md) for detailed changes.
        
        ## Installation
        
        \`\`\`bash
        npm install @blognow/sdk@${{ steps.version.outputs.version }}
        \`\`\`
        
        ## Documentation
        
        - ðŸ“– [API Documentation](https://synkc0.github.io/blognow-js-sdk/)
        - ðŸ’¡ [Usage Examples](https://github.com/synkc0/blognow-js-sdk#examples)
        
        ---
        
        ðŸ¤– _This release was created automatically by GitHub Actions_" \
          $PRERELEASE_FLAG
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docs:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc')
    needs: release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Generate documentation
      run: npm run docs

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
        cname: synkc0.github.io